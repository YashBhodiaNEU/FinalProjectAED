/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.Beneficiary;

import Business.AppointmentBooking.BookAppointment;
import Business.Beneficiary.Beneficiary;
import Business.Beneficiary.BeneficiaryDirectory;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import Business.VaccinationCenter.VaccinationCenter;
import Business.VaccinationSession.VaccinationSession;
import Business.VaccinationSession.VaccinationSessionDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Karan
 */
public class BookVaccinationAppointment extends javax.swing.JPanel {

    /**
     * Creates new form BookVaccinationAppointment
     */
    private UserAccount userAccount;
    private JPanel userProcessContainer;
    private EcoSystem ecosystem;
    private BeneficiaryDirectory beneficiaryDirectory;
    private VaccinationSessionDirectory vaccinationSessionDirectory;
    private int i=0;
    public BookVaccinationAppointment(JPanel userProcessContainer, BeneficiaryDirectory beneficiaryDirectory,VaccinationSessionDirectory vaccinationSessionDirectory, EcoSystem ecosystem, UserAccount userAccount) {
        initComponents();
        this.ecosystem = ecosystem;
        this.userProcessContainer = userProcessContainer;
        this.beneficiaryDirectory = beneficiaryDirectory;
        this.vaccinationSessionDirectory = vaccinationSessionDirectory;
        this.userAccount = userAccount;
        populateAppointmentTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBookAppointment = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSessions = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAppointment = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Book Vaccination Appointment");

        btnBookAppointment.setText("Book An Appointment");
        btnBookAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookAppointmentActionPerformed(evt);
            }
        });

        jLabel3.setText("Date");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblSessions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Session", "Date", "Start Time", "End Time", "Session Manager", "AEFI Manager", "Vaccinator", "Vaccine", "Slots Avilable", "Hospital"
            }
        ));
        jScrollPane1.setViewportView(tblSessions);

        btnBack.setText("<<<  Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Appointment ID", "Beneficiary", "Session", "Dose", "Status"
            }
        ));
        jScrollPane2.setViewportView(tblAppointment);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch))
                    .addComponent(btnBookAppointment, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBookAppointment)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateSessionTable(){
        DefaultTableModel dtm = (DefaultTableModel) tblSessions.getModel();
        dtm.setRowCount(0);
        String date = txtDate.getText();
        for(VaccinationSession vs : ecosystem.getVaccineSessionDirectory().getVaccinationSessionDirectory()){
            if(vs.getSessionDate().equals(date)){
            Object [] row = new Object[10];
            row[0] = vs;
            row[1] = vs.getSessionDate();
            row[2] = vs.getStartTime();
            row[3] = vs.getEndTime();
            row[4] = vs.getSessionManager();
            row[5] = vs.getAefiManager();
            row[6] = vs.getVaccinator();
            row[7] = vs.getVaccineName();
            row[8] = vs.getAvailableDoses();
            row[9] = vs.getCenterName();
            dtm.addRow(row);
        }
      }
    }
    
    public void populateAppointmentTable(){
        DefaultTableModel dtm = (DefaultTableModel) tblAppointment.getModel();
        dtm.setRowCount(0);
        for (BookAppointment ba : ecosystem.getAppointmentDirectory().getAppointmentDirectory()){
            if(userAccount.getEmployee().getName().equalsIgnoreCase(ba.getBeneficiary().getBeneficiaryName())){
                 Object [] row = new Object[5];
                 row[0] = ba;
                 row[1] = ba.getBeneficiary().getBeneficiaryName();
                 row[2] = ba.getVaccinationSession().getSessionName();
                 row[3] = ba.getDoseNumber();
                 row[4] = ba.getAppointmentStatus();
                 dtm.addRow(row);
            }
        }
    }
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        populateSessionTable();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnBookAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookAppointmentActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblSessions.getSelectedRow();
        
        Beneficiary beneficiary = ecosystem.getBeneficiaryDirectory().getBeneficiary(userAccount.getEmployee().getName());
        VaccinationSession vs = (VaccinationSession)tblSessions.getValueAt(selectedRow, 0);
        BookAppointment ba = ecosystem.getAppointmentDirectory().newAppointment();
        

        ba.setAppointmentID(String.valueOf(i++));
        ba.setBeneficiary(beneficiary);
        ba.setVaccinationSession(vs);
        
        if(beneficiary.getStatus().equalsIgnoreCase("Not Vaccinated")){
            ba.setDoseNumber(1);
            String status = "Appointment Booked";
            ba.setAppointmentStatus(status);
        }
        else if(beneficiary.getStatus().equalsIgnoreCase("Partially Vaccinated")){
            ba.setDoseNumber(2);
            String status = "Appointment Booked";
            ba.setAppointmentStatus(status);
        }
        else{
            JOptionPane.showMessageDialog(null, "You are Fully Vaccinated");
            return;
        }

        
        populateAppointmentTable();
        btnBookAppointment.setEnabled(false);
    }//GEN-LAST:event_btnBookAppointmentActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBookAppointment;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblAppointment;
    private javax.swing.JTable tblSessions;
    private javax.swing.JTextField txtDate;
    // End of variables declaration//GEN-END:variables
}
